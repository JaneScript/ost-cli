#!/usr/bin/env node
const program = require('commander');
const chalk = require('chalk');
const load = require('../src/load');
const prompt = require('../src/prompt');
const screen = require('../src/screen');
const generate = require('../src/generate');

require('../src/store');

process.on('unhandledRejection', reason => {
  if(reason.__MSG__) {
    const msg = reason.__MSG__.toLowerCase();
    switch (true) {
      case Object.entries(__ERROR_STATUS__).join().toLowerCase().includes(msg):
        global.spinner.fail(msg.split('@')[1]);
        break;
      default:
        break;
    }
    console.log(reason.err);
  }
});

program
  .usage('[project-name]')
  .description('create a project from a remote template')
  .option('--local', 'build in local environment for test')
  .option('--prod', 'build in production environment for test')
  .option('--stage', 'build in stage environment for test')
  .option('--test', 'build in test environment for test');

program.on('--help', () => {
  console.log();
  console.log('  Examples:');
  console.log();
  console.log(chalk.yellow('    $ ost init my-project'));
  console.log();
});

program.parse(process.argv);

run();
async function run() {
  screen();
  const appName = program.args[0];
  __SET_APP_NAME__(appName);
  await prompt();
  await load(__GET_APP_NAME__());
  generate(__GET_APP_PATH__());
}
